"""CreaciÃ³n inicial de tablas

Revision ID: e635e0adea91
Revises: 
Create Date: 2025-04-15 22:00:18.182682

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e635e0adea91'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('almacenes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(length=255), nullable=False),
    sa.Column('direccion', sa.Text(), nullable=True),
    sa.Column('ciudad', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('clientes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(length=255), nullable=False),
    sa.Column('telefono', sa.String(length=20), nullable=True),
    sa.Column('direccion', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('frecuencia_compra_dias', sa.Integer(), nullable=True),
    sa.Column('ultima_fecha_compra', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('productos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(length=255), nullable=False),
    sa.Column('descripcion', sa.Text(), nullable=True),
    sa.Column('precio_compra', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('activo', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('nombre')
    )
    op.create_table('proveedores',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(length=255), nullable=False),
    sa.Column('telefono', sa.String(length=20), nullable=True),
    sa.Column('direccion', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('nombre')
    )
    op.create_table('lotes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('producto_id', sa.Integer(), nullable=False),
    sa.Column('proveedor_id', sa.Integer(), nullable=True),
    sa.Column('descripcion', sa.String(length=255), nullable=True),
    sa.Column('peso_humedo_kg', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('peso_seco_kg', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('cantidad_disponible_kg', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('fecha_ingreso', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['producto_id'], ['productos.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['proveedor_id'], ['proveedores.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('presentaciones_producto',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('producto_id', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(length=100), nullable=False),
    sa.Column('capacidad_kg', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('tipo', sa.String(length=20), nullable=False),
    sa.Column('precio_venta', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('activo', sa.Boolean(), nullable=True),
    sa.Column('url_foto', sa.String(length=255), nullable=True),
    sa.CheckConstraint("tipo IN ('bruto', 'procesado', 'merma', 'briqueta', 'detalle')"),
    sa.ForeignKeyConstraint(['producto_id'], ['productos.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('producto_id', 'nombre', name='uq_producto_nombre_presentacion')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('password', sa.String(length=256), nullable=False),
    sa.Column('rol', sa.String(length=20), nullable=False),
    sa.Column('almacen_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['almacen_id'], ['almacenes.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('gastos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('descripcion', sa.Text(), nullable=False),
    sa.Column('monto', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('fecha', sa.Date(), nullable=True),
    sa.Column('categoria', sa.String(length=50), nullable=False),
    sa.Column('almacen_id', sa.Integer(), nullable=True),
    sa.Column('usuario_id', sa.Integer(), nullable=True),
    sa.CheckConstraint("categoria IN ('logistica', 'personal', 'otros')"),
    sa.ForeignKeyConstraint(['almacen_id'], ['almacenes.id'], ),
    sa.ForeignKeyConstraint(['usuario_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('inventario',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('presentacion_id', sa.Integer(), nullable=False),
    sa.Column('almacen_id', sa.Integer(), nullable=False),
    sa.Column('lote_id', sa.Integer(), nullable=True),
    sa.Column('cantidad', sa.Integer(), nullable=False),
    sa.Column('stock_minimo', sa.Integer(), nullable=False),
    sa.Column('ultima_actualizacion', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['almacen_id'], ['almacenes.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['lote_id'], ['lotes.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['presentacion_id'], ['presentaciones_producto.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('presentacion_id', 'almacen_id', name='uq_inventario_compuesto')
    )
    with op.batch_alter_table('inventario', schema=None) as batch_op:
        batch_op.create_index('idx_inventario_almacen', ['almacen_id', 'presentacion_id'], unique=False)

    op.create_table('mermas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lote_id', sa.Integer(), nullable=False),
    sa.Column('cantidad_kg', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('convertido_a_briquetas', sa.Boolean(), nullable=True),
    sa.Column('fecha_registro', sa.DateTime(timezone=True), nullable=True),
    sa.Column('usuario_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['lote_id'], ['lotes.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['usuario_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('movimientos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tipo', sa.String(length=10), nullable=False),
    sa.Column('presentacion_id', sa.Integer(), nullable=True),
    sa.Column('lote_id', sa.Integer(), nullable=True),
    sa.Column('usuario_id', sa.Integer(), nullable=True),
    sa.Column('cantidad', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('fecha', sa.DateTime(timezone=True), nullable=True),
    sa.Column('motivo', sa.String(length=255), nullable=True),
    sa.CheckConstraint("tipo IN ('entrada', 'salida')"),
    sa.CheckConstraint('cantidad > 0'),
    sa.ForeignKeyConstraint(['lote_id'], ['lotes.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['presentacion_id'], ['presentaciones_producto.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['usuario_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pedidos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cliente_id', sa.Integer(), nullable=False),
    sa.Column('almacen_id', sa.Integer(), nullable=False),
    sa.Column('vendedor_id', sa.Integer(), nullable=True),
    sa.Column('fecha_creacion', sa.DateTime(timezone=True), nullable=True),
    sa.Column('fecha_entrega', sa.DateTime(timezone=True), nullable=False),
    sa.Column('estado', sa.String(length=20), nullable=True),
    sa.Column('notas', sa.Text(), nullable=True),
    sa.CheckConstraint("estado IN ('programado', 'confirmado', 'entregado', 'cancelado')"),
    sa.ForeignKeyConstraint(['almacen_id'], ['almacenes.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['cliente_id'], ['clientes.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['vendedor_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ventas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cliente_id', sa.Integer(), nullable=False),
    sa.Column('almacen_id', sa.Integer(), nullable=False),
    sa.Column('vendedor_id', sa.Integer(), nullable=True),
    sa.Column('fecha', sa.DateTime(timezone=True), nullable=True),
    sa.Column('total', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('tipo_pago', sa.String(length=10), nullable=False),
    sa.Column('estado_pago', sa.String(length=15), nullable=True),
    sa.Column('consumo_diario_kg', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.CheckConstraint("estado_pago IN ('pendiente', 'parcial', 'pagado')"),
    sa.CheckConstraint("tipo_pago IN ('contado', 'credito')"),
    sa.ForeignKeyConstraint(['almacen_id'], ['almacenes.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['cliente_id'], ['clientes.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['vendedor_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pagos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('venta_id', sa.Integer(), nullable=False),
    sa.Column('usuario_id', sa.Integer(), nullable=True),
    sa.Column('monto', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('fecha', sa.DateTime(timezone=True), nullable=True),
    sa.Column('metodo_pago', sa.String(length=20), nullable=False),
    sa.Column('referencia', sa.String(length=50), nullable=True),
    sa.Column('url_comprobante', sa.String(length=255), nullable=True),
    sa.CheckConstraint("metodo_pago IN ('efectivo', 'transferencia', 'tarjeta')"),
    sa.ForeignKeyConstraint(['usuario_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['venta_id'], ['ventas.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pedido_detalles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pedido_id', sa.Integer(), nullable=False),
    sa.Column('presentacion_id', sa.Integer(), nullable=False),
    sa.Column('cantidad', sa.Integer(), nullable=False),
    sa.Column('precio_estimado', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.ForeignKeyConstraint(['pedido_id'], ['pedidos.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['presentacion_id'], ['presentaciones_producto.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('venta_detalles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('venta_id', sa.Integer(), nullable=False),
    sa.Column('presentacion_id', sa.Integer(), nullable=False),
    sa.Column('cantidad', sa.Integer(), nullable=False),
    sa.Column('precio_unitario', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.ForeignKeyConstraint(['presentacion_id'], ['presentaciones_producto.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['venta_id'], ['ventas.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('venta_detalles')
    op.drop_table('pedido_detalles')
    op.drop_table('pagos')
    op.drop_table('ventas')
    op.drop_table('pedidos')
    op.drop_table('movimientos')
    op.drop_table('mermas')
    with op.batch_alter_table('inventario', schema=None) as batch_op:
        batch_op.drop_index('idx_inventario_almacen')

    op.drop_table('inventario')
    op.drop_table('gastos')
    op.drop_table('users')
    op.drop_table('presentaciones_producto')
    op.drop_table('lotes')
    op.drop_table('proveedores')
    op.drop_table('productos')
    op.drop_table('clientes')
    op.drop_table('almacenes')
    # ### end Alembic commands ###
